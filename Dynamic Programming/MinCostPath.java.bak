class MinCostPath
{
	public int minCost(int [][]cost, int m, int n)
	{
		int temp[][] = new int[m+1][n+1];
		int sum = 0;
		for(int i = 0; i<=n; i++)
		{
			temp[0][i] = sum + cost[0][i];
			sum = temp[0][i];
		}
		sum = 0;
		for(int i = 1; i<=m; i++)
		{
			temp[i][0] = sum + temp[i][0];
			sum = temp[i][0];
		}

		for(int i=1;i<=m;i++)
		{
			for(int j=1; j<=n; j++)
			{
				temp[i][j] = cost[i][j] + Math.min(temp[i-1][j], temp[i][j-1]);
			}
		}
		return temp[m][n];
	}
	public static void main(String args[])
	{
		int mat[][] = { {1,3,5,8},
						{4,2,1,7},
						{4,3,2,3}
								 };
		int m = mat[0].length;
		int n = mat.length;
		MinCostPath mcp = new MinCostPath();

		int res = mcp.minCost(mat,m,n);
		System.out.println(res);
	}
}